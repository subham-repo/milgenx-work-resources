<div class="sale-teaser color-{{ block.settings.color_scheme }} gradient">
  <style>
    .sale-teaser {
      padding: {{ block.settings.padding_top | times: 0.5 | round: 0 }}px 3rem {{ block.settings.padding_bottom | times: 0.5 | round: 0 }}px 3rem;
    }
    .sale-teaser-content.sales-timer {
        display: inline-flex;
        gap: 8px;
        justify-content: center;
    }
    .sale-teaser-content.sales-timer .timer-column span {
        position: relative;
    }
    .sale-teaser-content.sales-timer .timer-column:not(:last-child) span:after {
        content: ':';
        position: absolute;
        top: 0;
        line-height: normal;
        right: -6.5px;
    }
    .sale-teaser .page-width {
        display: flex;
        justify-content: center;
        align-items: center;
        column-gap: 10px;
        row-gap: 5px;
        flex-wrap: wrap;
    }
    /* @media(max-widt) */
    .sale-teaser-content.sales-timer .timer-column {
        display: flex;
        flex-flow: column;
    }
    .sale-teaser-content.sales-timer .timer-column small {
        font-size: 10px;
        font-weight: 300;
        text-transform: capitalize;
    }
    .section-header.scrolled-past-header.shopify-section-header-sticky.shopify-section-header-hidden .sale-teaser {
        position: fixed;
        width: 100%;
        top: 0;
    }
  </style>
  <div class="page-width center">
    {% if block.settings.text != blank %}
    <div class="sale-teaser-content info">
      <span class="{{ block.settings.content_size }}">{{ block.settings.text }}</span>
    </div>
    {% endif %}
    <div id="clockdiv" class="sale-teaser-content sales-timer {{ block.settings.content_size }}">
        <div class='timer-column'><span>00</span><small>days</small></div>
        <div class='timer-column'><span>00</span><small>hrs</small></div>
        <div class='timer-column'><span>00</span><small>mins</small></div>
        <div class='timer-column'><span>00</span><small>secs</small></div>
    </div>
  </div>
  <script>
    {% assign launch_time = product.metafields.custom.launch_timer %}

    let deadline;
    const clockDiv = document.getElementById("clockdiv");
    const sales_timer = document.querySelector(".sales-timer");
  
    {% if launch_time != blank %}
      // Use launch time from metafield (universal/static timer)
      deadline = new Date("{{ launch_time }}").getTime();
    {% else %}
      // Check if a 15-minute timer is already stored in localStorage
      const savedDeadline = localStorage.getItem("riqueza_15min_deadline");
      const now = new Date().getTime();
  
      if (savedDeadline && parseInt(savedDeadline) > now) {
        // Resume existing timer
        deadline = parseInt(savedDeadline);
      } else {
        // Start new 15-minute countdown
        deadline = now + 15 * 60 * 1000;
        localStorage.setItem("riqueza_15min_deadline", deadline);
      }
    {% endif %}
  
    const x = setInterval(() => {
      const now = new Date().getTime();
      const t = deadline - now;
  
      const days = Math.floor(t / (1000 * 60 * 60 * 24)).toString().padStart(2, "0");
      const hours = Math.floor((t % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)).toString().padStart(2, "0");
      const minutes = Math.floor((t % (1000 * 60 * 60)) / (1000 * 60)).toString().padStart(2, "0");
      const seconds = Math.floor((t % (1000 * 60)) / 1000).toString().padStart(2, "0");
  
      let timeline = "";
  
      if (parseInt(days) > 0) {
        timeline =
          "<div class='timer-column'><span>" + days + "</span><small>days</small></div>" +
          "<div class='timer-column'><span>" + hours + "</span><small>hrs</small></div>" +
          "<div class='timer-column'><span>" + minutes + "</span><small>mins</small></div>" +
          "<div class='timer-column'><span>" + seconds + "</span><small>secs</small></div>";
      } else {
        timeline =
          "<div class='timer-column'><span>" + hours + "</span><small>hrs</small></div>" +
          "<div class='timer-column'><span>" + minutes + "</span><small>mins</small></div>" +
          "<div class='timer-column'><span>" + seconds + "</span><small>secs</small></div>";
      }
  
      if (clockDiv) clockDiv.innerHTML = timeline;
  
      // If timer expires
      if (t < 0) {
        clearInterval(x);
        if (clockDiv) clockDiv.innerHTML = "EXPIRED";
        if (sales_timer) {
          sales_timer.style.visibility = "hidden";
          sales_timer.remove();
        }
  
        // Remove only if it was a 15-minute timer
        {% unless launch_time != blank %}
          localStorage.removeItem("riqueza_15min_deadline");
        {% endunless %}
      }
    }, 1000);

  </script>
</div>

<!-- Shopify JSON Schema -->

{
  "type": "sale-teaser",
  "name": "Sale Teaser",
  "limit": 1,
  "settings": [
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-4"
    }, 
    {
      "type": "text",
      "id": "text",
      "default": "40% OFF Everything â€“ Today Only!",
      "label": "Content"
    },
    {
      "type": "select",
      "id": "content_size",
      "options": [
        {
          "value": "h6",
          "label": "t:sections.all.heading_size.options__1.label"
        },
        {
          "value": "h5",
          "label": "t:sections.all.heading_size.options__2.label"
        },
        {
          "value": "h4",
          "label": "t:sections.all.heading_size.options__3.label"
        },
        {
          "value": "h3",
          "label": "t:sections.all.heading_size.options__4.label"
        },
        {
          "value": "h2",
          "label": "t:sections.all.heading_size.options__5.label"
        }
      ],
      "default": "h4",
      "label": "Content Size"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 36,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 20
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 36,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 20
    }
  ]
}