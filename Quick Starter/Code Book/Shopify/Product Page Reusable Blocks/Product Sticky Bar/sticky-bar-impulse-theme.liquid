<!-- snippets/product-sticky-bar.liquid -->
{% if template contains 'product' %}
<div id="huratips-addtocart-sticky">
  <div class="page-width">
    <div class="product-info">
      {% unless product.metafields.global.featured == blank %}
      <img src="{{ product.metafields.global.featured | asset_url }}" width="60" height="60" alt="{{ product.title | escape }}" loading="lazy" class="small--hide">
      {% else %}
      <img src="{{ product.featured_image | product_img_url: '60x' }}" width="60" height="60" alt="{{ product.title | escape }}" loading="lazy" class="small--hide" />
      {% endunless %}
      <div class="product_info_block">
      	{% comment %}
      	  <h3>{{ product.title }}</h3>
      	{% endcomment %}
        {%- for block in section.blocks -%}
          {%- case block.type -%}
          
            {%- when 'custom_liquid' -%}
            {{ block.settings.custom_liquid }}
            {%- when 'price' -%}
              <div id="price-{{ section.id }}" role="status" {{ block.shopify_attributes }}>
                {% render "price", hide_sale_price: hide_sale_price, product: product, current_variant: current_variant  %}
              </div>
          {% comment %}
          {%- when 'variant_picker' -%}
              {% render 'product-variant-picker', product: product, block: block, product_form_id: product_form_id %}
          {% endcomment %}
          {% endcase %}
          {% endfor %}
          <div class="product-block variant-view-{{ block.settings.variant_style }}" {% if block.settings.product_dynamic_variants_enable %}data-dynamic-variants-enabled{% endif %} {{ block.shopify_attributes }}>
            {%- unless product.has_only_default_variant -%}
              {%- for option in product.options_with_values -%}
                {%- liquid
                  if block.settings.color_swatches
                    assign is_color = false
                    assign color_option_index = 0
                    assign swatch_trigger = 'products.general.color_swatch_trigger' | t | downcase
                    assign color_option_index = forloop.index0
                    assign downcased_option = option.name | downcase
                    if downcased_option contains swatch_trigger
                      assign is_color = true
                    elsif swatch_trigger == 'color' and downcased_option contains 'colour'
                      assign is_color = true
                    endif
                  endif
                -%}

                {%- if block.settings.variant_style == 'button' -%}
                  {%- render 'variant-button',
                    block: block,
                    product: product,
                    form_id: form_id,
                    section_id: section_id,
                    option: option,
                    forloop: forloop,
                    variant_labels: block.settings.variant_labels,
                    is_color: is_color,
                    color_option_index: color_option_index,
                    connect_to_sizechart: connect_to_sizechart,
                    sizechart_index: sizechart_index
                  -%}
                {%- elsif block.settings.variant_style == 'show-selected' -%}
                  <div index="{{ forloop.index }}" for="{{ option.name | handleize }}" class="mini-variant-option {{ option.name | handleize }}">
                    <b>{{ option.name }}:</b> <span class="value">{{ option.selected_value }}</span>
                  </div>
                {%- else -%}
                  {%- render 'variant-dropdown',
                    product: product,
                    form_id: form_id,
                    section_id: section_id,
                    option: option,
                    forloop: forloop,
                    variant_labels: block.settings.variant_labels,
                    isSticky: true
                  -%}
                {%- endif -%}
              {%- endfor -%}
            {%- endunless -%}
          </div>
      </div>
    </div> 
      <input type="hidden" name="id" value="{{ product.variants.first.id }}" />
      <input type="hidden" name="quantity" value="1" min="1" >
      <button type="submit" class="btn add-to-cart stickybutton" {% if product.available == false %}disabled{% endif %}>
        {%- if product.selected_or_first_available_variant == null -%}
          {{ 'products.product.unavailable' | t }}
        {%- elsif product.selected_or_first_available_variant.available == false or quantity_rule_soldout -%}
          {{ 'products.product.sold_out' | t }}
        {%- else -%}
          {{ 'products.product.add_to_cart' | t }}
        {%- endif -%}
      </button>
  </div>
</div>

<style>
  .product-block.variant-view-dropdown .variant-input-wrap select {
      display: block !important;
      margin: 0 !important;
      border-radius: 4px;
      min-width: 150px;
      background-color: #f9f9f9;
      box-shadow: 0 0 4px 0 rgba(0, 0, 0, .2) inset;
  }
  .product-block.variant-view-dropdown .variant-wrapper {
      margin: 0;
  }
  .product-block.variant-view-dropdown .variant-wrapper {
      display: block !important;
  }
  .product-block.variant-view-dropdown .variant-wrapper--dropdown {
      height: 40px;
      margin: 0;
  }
  div#huratips-addtocart-sticky .product_info_block .product-block {
    /* background: red; */
  }
  .product-block.variant-view-dropdown .variant-wrapper .variant-input-wrap, 
  .product-block.variant-view-dropdown .variant-wrapper .variant-input-wrap select {
      /* min-width: 150px;
      height: 40px;
      display: block !important; */
  }
</style>
<script>
  window.addEventListener("load", function(){
    let productPageWrapper = document.querySelector(".product-single__meta");
    let productSubmitBtn = productPageWrapper.querySelector("button.add-to-cart");
    let stickyBar = document.querySelector("#huratips-addtocart-sticky");
    let stickySubmitButton = stickyBar.querySelector("button");
    
    let singleVariants = productPageWrapper.querySelector("select.product-single__variants");


    if(singleVariants){
      singleVariants.addEventListener("change", function(){
        let currentVariant = singleVariants.value;
        let currentVariantData = singleVariants.querySelector("option:checked")['label'].split("-");
        console.log({currentVariantData})
        let currentVariantValues = currentVariantData.shift();
        let currentVariantPrice = currentVariantData.pop();
  
        let productVaraintData = currentVariantValues.split("/");
  
        // In Case: Show Selected
        let miniVariants = stickyBar.querySelectorAll(".mini-variant-option");
        if(miniVariants){
          miniVariants.forEach(function(miniVariant, i){
            productVaraintData.forEach(function(currentVariantValue, index){
              // console.log({i, index});
              if(i == index){
                miniVariant.querySelector(".value").innerText = currentVariantValue;
              }
            })
          })
  
          miniVariants.forEach(function(miniVariant){
            miniVariant.addEventListener("click", function(){
              productPageWrapper.scrollIntoView({ behavior: "smooth", block: "start" });
            })
          })
        }
  
        // In Case: Dropdown
        let dropdownVariants = stickyBar.querySelectorAll(".product-block.variant-view-dropdown .variant-wrapper--dropdown select");
        if(dropdownVariants){
         dropdownVariants.forEach(function(dropdownVariant, i){
            productVaraintData.forEach(function(currentVariantValue, index){
              // console.log({i, index});
              if(i == index){
                let fieldOptions = dropdownVariant.querySelectorAll("option");
                fieldOptions.forEach(function(fieldOption, index){
                  let fieldValue = String(fieldOption.value).toLowerCase();
                  console.log({fieldValue, currentVariantValue})
                  
                  currentVariantValue = currentVariantValue.replace(/\s+$/, '').toLowerCase();
                  currentVariantValue = currentVariantValue.replace(" ", "");
                  
                  if(fieldValue === currentVariantValue || fieldValue.includes(currentVariantValue)){
                    let optionIndex = index;
                    dropdownVariant.selectedIndex = optionIndex;
  
                    let changeEvent = new Event("change", { bubbles: true });
                    dropdownVariant.dispatchEvent(changeEvent);
                  }
                  // console.log({fieldValue, currentVariantValue, index})
                })
              }
            })
          }) 
        }
        // console.log({currentVariant, currentVariantData, currentVariantValues, currentVariantPrice});
      })
    }else{
      const observer = new MutationObserver((mutations, observer) => {
        let varSwatchKing = document.querySelector("variant-swatch-king");
        if (varSwatchKing) {
          observer.disconnect(); // Stop observing once the element is found
          initVarSwatchKing(); // Run your function
        }
      });
      
      observer.observe(document.body, { childList: true, subtree: true });
      
      function initVarSwatchKing() {
        let varSwatchKing = document.querySelector("variant-swatch-king");
        if (!varSwatchKing) return;
      
        let varSwatchKingOptionGroups = varSwatchKing.querySelectorAll("div[sa-options-position='default'] div[option-target]");
      
        varSwatchKingOptionGroups.forEach(function (varSwatchKingOptionGroup) {
          let optionTarget = varSwatchKingOptionGroup.getAttribute("option-target");
          let swatchOptions = varSwatchKing.querySelectorAll(`div[option-target="${optionTarget}"] .swatch-view-item`);
      
          swatchOptions.forEach(function (swatchOption) {
            swatchOption.addEventListener("click", function () {
              let swatchOptValue = swatchOption.getAttribute("orig-value")?.trim().toLowerCase();
      
              if (dropdownVariants.length > 0) {
                dropdownVariants.forEach(function (dropdownVariant) {
                  if (dropdownVariant.getAttribute("data-index") == optionTarget) {
                    let fieldOptions = dropdownVariant.querySelectorAll("option");
                    fieldOptions.forEach(function (fieldOption, index) {
                      let fieldValue = String(fieldOption.value).toLowerCase();
                      if (fieldValue === swatchOptValue) {
                        dropdownVariant.selectedIndex = index;
                      }
                    });
                  }
                });
              }
            });
          });
        });
      }
    }

    // Sync Product Sticky Bar Dropdown
    let dropdownVariants = stickyBar.querySelectorAll(".product-block.variant-view-dropdown .variant-wrapper--dropdown select");
    if (dropdownVariants.length > 0) {
      dropdownVariants.forEach(function (dropdownVariant) {
        dropdownVariant.addEventListener("change", function () {
          // console.log("Dropdown Changed:", dropdownVariant);
  
          let changedOption = dropdownVariant.getAttribute("for");
          let selectedValue = dropdownVariant.value.trim().toLowerCase();
          let optionTarget = dropdownVariant.getAttribute("data-index");
  
          // console.log({ changedOption, optionTarget, selectedValue });
  
          // Check for variant-swatch-king
          let varSwatchKing = document.querySelector("variant-swatch-king");
          if (varSwatchKing) {
            let swatchOptions = varSwatchKing.querySelectorAll(`div[option-target="${optionTarget}"] .swatch-view-item`);
  
            swatchOptions.forEach(function (swatchOption) {
              let swatchOptValue = swatchOption.getAttribute("orig-value")?.trim().toLowerCase();
              // console.log({ swatchOptValue, selectedValue });
  
              if (swatchOptValue === selectedValue) {
                swatchOption.click();
              }
            });
          }
  
          // Check for theme default swatches
          let themeSwatch = document.querySelector(".product-block.varblock");
          if (themeSwatch) {
            let themeSwatchOptions = themeSwatch.querySelectorAll(`.variant-input-wrap[data-index="${optionTarget}"] div.variant-input`);
            themeSwatchOptions.forEach(function (swatchOption) {
              let swatchOptValue = swatchOption.getAttribute("data-value")?.trim().toLowerCase();
              // console.log({ swatchOptValue, selectedValue });
  
              if (swatchOptValue === selectedValue) {
                swatchOption.querySelector("label").click();
              }
            });

            let themeDropDowns = themeSwatch.querySelectorAll(`.variant-input-wrap[data-index="${optionTarget}"] select`);
            themeDropDowns.forEach(function(themeDropDown){
              let fieldOptions = themeDropDown.querySelectorAll("option");
              fieldOptions.forEach(function(fieldOption, index){
                let fieldValue = String(fieldOption.value).toLowerCase();
                console.log({fieldValue, selectedValue})
                if(fieldValue === selectedValue){
                  let optionIndex = index;
                  themeDropDown.selectedIndex = optionIndex;
                  console.log("...");
                }
                // console.log({fieldValue, selectedValue, index})
              })
            })
          }

          let formSyncedValue = singleVariants.value;
          console.log({formSyncedValue});
        });
      });
    }
    

    stickySubmitButton.addEventListener("click", function(){
        productSubmitBtn.click();
    })

    let pageBody = document.body;
    let mainATCBtn = document.querySelector(".product-form__submit");
    let stickyATCBar = document.querySelector("#huratips-addtocart-sticky");

    window.addEventListener("scroll", function(){

      const isVisibleInViewport = (element) => {
          const rect = element.getBoundingClientRect()
          return (
              rect.top >= 0 &&
              rect.left >= 0 &&
              rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&
              rect.right <= (window.innerWidth || document.documentElement.clientWidth)
          )
      }

      if(isVisibleInViewport(productSubmitBtn)){
        stickyATCBar.classList.remove("show-bar");
      }else{
        stickyATCBar.classList.add("show-bar");
      }
    })
    
  })

document.addEventListener("DOMContentLoaded", function () {
    const parentContainer = document.querySelector('#huratips-addtocart-sticky'); // Select the parent container

    if (!parentContainer) {
        console.log("Parent container #huratips-addtocart-sticky not found.");
        return;
    }

    const variantWrapper = parentContainer.querySelector('.variant-input-wrap[data-index="option1"]'); // Select the wrapper inside the parent
    const variantSelect = variantWrapper ? variantWrapper.querySelector('select') : null; // Get the select inside the wrapper
    const productImage = parentContainer.querySelector('.product-info img'); // Get the product image inside the parent

    if (variantSelect && productImage) {
        variantSelect.addEventListener("change", function () {
            const selectedOption = this.options[this.selectedIndex]; // Get selected option
            
            if (selectedOption) { 
              // console.log("..1")
                const newImageSrc = selectedOption.getAttribute("data-featured-image"); // Get featured image URL
                
                if (newImageSrc) {
                  // console.log("...2")
                    console.log("Updated Image Src:", newImageSrc); // Log new image URL
                    productImage.src = newImageSrc; // Update image src
                } else {
                  // console.log("....3")
                    console.log("No featured image found for this variant.");
                }
            }
        });

        // **Trigger change event on page load to set correct image**
        variantSelect.dispatchEvent(new Event("change"));
    } else {
        console.log("Variant select or product image not found inside #huratips-addtocart-sticky.");
    }
});


</script>
<style>
  #huratips-addtocart-sticky{
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    width: 100%;
    padding: 5px 0;
    transition: .2s transform ease-in-out;
  }
div#CartDrawer {
    z-index: 999999;
}
#huratips-addtocart-sticky .product__price-savings {
    display: none;
}
  body:not(.overflow-hidden) #huratips-addtocart-sticky .instock-pulse, 
  .product_info_block fieldset.product-form__input:not(.size){
      display: none;
  }
  .product_info_block fieldset.product-form__input.size {
      margin-bottom: 0;
  }
  .product_info_block fieldset.product-form__input.size input:not(:checked)+label {
      border: 1px solid #ccc;
  }
  div#huratips-addtocart-sticky:not(.show-bar) {
      transform: translateY(200px);
  }
  div#huratips-addtocart-sticky.show-bar {
      transform: translateY(0px);
  }
  body.overflow-hidden #huratips-addtocart-sticky{
    z-index: 9;
  }
  html:not(.js-drawer-open):not(.lock-scroll) #huratips-addtocart-sticky{
    z-index: 9999;
  }
  #huratips-addtocart-sticky .product-info img {
    height: 40px;
    width: 40px;
    object-position: center;
    object-fit: cover;
    border-radius: 6px;
    margin-right: 20px;
    box-shadow: 0 0px 2px 0 rgb(0 0 0 / 20%);
  }
  #huratips-addtocart-sticky .product-info .product_info_block h3 {
    margin-bottom: 5px;
    margin-top: 0;
    font-weight: bold;
  }
  #huratips-addtocart-sticky select,
  #huratips-addtocart-sticky input { color: #000; }
  #huratips-addtocart-sticky select,
  #huratips-addtocart-sticky input,
  #huratips-addtocart-sticky button{
    height:40px;
    margin:0 5px;
    vertical-align: middle;
  }
  #huratips-addtocart-sticky input{
    width: 60px;
    text-align: center;
  }
  #huratips-addtocart-sticky button {
      padding: 0 15px;
      font-weight: bold;
      white-space: nowrap;
      text-transform: uppercase;
      font-size: 13px;
      font-weight: 600;
      background-image: unset;
  }
  #huratips-addtocart-sticky .page-width {
    width: 100%;
    display: flex;
    flex-flow: row;
    align-items: center;
  }
  #huratips-addtocart-sticky .button:before{
    display:none;
  }
  #huratips-addtocart-sticky .page-width:after {
    display: none;
  }
  #huratips-addtocart-sticky .product-info {
    display: flex;
    align-items: center;
  }
  div#huratips-addtocart-sticky .product_info_block .product-block {
      display: flex;
      align-items: flex-end;
      gap: 15px;
      margin-bottom: 0;
      transition: unset;
      opacity: 1;
  }
  .mini-variant-option {
      border: 1px solid #c8c8c8;
      padding: 2.5px 15px;
      border-radius: 4px;
      background-color: #f0f0f0;
      box-shadow: 0 0 5px 0 rgba(0, 0, 0, .2) inset;
      cursor: pointer;
  }
  @media(min-width:768px){
    #huratips-addtocart-sticky .page-width {
      justify-content: space-between;
    }
    div#huratips-addtocart-sticky {
        background-color: #fff;
        border-top: 1px solid #e2e2e2;
        box-shadow: 0 0 20px 0 rgb(0 0 0 / 10%);
    }
    div#huratips-addtocart-sticky .product_info_block .product-block .variant-wrapper, 
    div#huratips-addtocart-sticky .product_info_block .product-block .variant-wrapper.variant-wrapper--dropdown select-- {
        display: inline-block !important;
        margin-top: 0;
        height: 40px;
    }
    div#huratips-addtocart-sticky .product_info_block {
        width: 100%;
        display: flex;
        align-items: center;
        gap: 15px;
    }
    div#huratips-addtocart-sticky .product_info_block label.variant__label {
        /* display: none; */
    }
  }
  @media(max-width:767px){
    div#huratips-addtocart-sticky {
        background-color: transparent;
    }
    #huratips-addtocart-sticky .product-info {
      display: none;
    }
    #huratips-addtocart-sticky button { width: 100%; }
    #huratips-addtocart-sticky .page-width {
      justify-content: center;
    }
    #huratips-addtocart-sticky button {
      margin: 0;
    }
    #huratips-addtocart-sticky .product-info {
      margin-bottom: 0px;
    }
    #huratips-addtocart-sticky form, 
    #huratips-addtocart-sticky .product-info, 
    #huratips-addtocart-sticky .product-info .product_info_block, 
    #huratips-addtocart-sticky .product-info .product_info_block .product__price .price__pricing-group {
      width: 100%;
    }
    #huratips-addtocart-sticky .product-info .product_info_block .product__price .price__pricing-group {
      justify-content: space-between;
    }
    #huratips-addtocart-sticky .product-info .product_info_block .product__price .price__pricing-group span.price__badge.price__badge--sale {
      font-size: 12px;
    }
  }
  @media(min-width:768px)and(max-width:991px){
  	justify-content: space-between;
  }
</style>
{% endif %}

<!-- Code for Render it -->

{%- for block in section.blocks -%}
    {%- case block.type -%}
      {%- when 'sticky_bar' -%}
        {% render "product-sticky-bar", block:block , hide_sale_price: hide_sale_price, product: product, current_variant: current_variant %}
    {%- endcase -%}
{%- endfor -%}

<!-- Block JSON For Product Section -->

{
      "type": "sticky_bar",
      "name": "Sticky Bar",
      "settings": [
        {
          "type": "header",
          "content": "Sticky Bar Options"
        },
        {
          "type": "select",
          "id": "variant_style",
          "label": "Variant Style",
          "default": "show-selected",
          "options": [
            {
              "label": "Show Selected",
              "value": "show-selected"
            },
            {
              "label": "Dropdown",
              "value": "dropdown"
            },
            {
              "label": "Button",
              "value": "button"
            }
          ]
        }
      ]
    },